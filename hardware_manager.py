"""
–ú–µ–Ω–µ–¥–∂–µ—Ä –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è - –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç –û–° –∏ –ø–æ–¥–∫–ª—é—á–∞–µ—Ç —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ –¥—Ä–∞–π–≤–µ—Ä—ã
"""
import sys
import platform


def setup_hardware():
    """–û–ø—Ä–µ–¥–µ–ª—è–µ—Ç –û–° –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ –º–æ–¥—É–ª–∏"""

    system = platform.system().lower()

    if system == 'windows' or system == 'darwin':  # Windows –∏–ª–∏ Mac
        print("üîß –†–µ–∂–∏–º —ç–º—É–ª—è—Ü–∏–∏: –∑–∞–ø—É—Å–∫ –Ω–∞ –ü–ö")

        # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –º–æ–∫–∏
        from mock_hardware import (
            MockGPIO as GPIO,
            MockDHT22,
            MockSerial,
            MockI2C,
            MockADS1115,
            MockAnalogIn,
            mock_read_from_pwm
        )

        # –°–æ–∑–¥–∞–µ–º –º–æ–∫-–º–æ–¥—É–ª–∏
        hardware_modules = {
            'GPIO': GPIO,
            'DHT22': MockDHT22,
            'Serial': MockSerial,
            'I2C': MockI2C,
            'ADS1115': MockADS1115,
            'AnalogIn': MockAnalogIn,
            'read_from_pwm': mock_read_from_pwm,
            'is_emulation': True
        }

    elif system == 'linux':
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —ç—Ç–æ Raspberry Pi –∏–ª–∏ –æ–±—ã—á–Ω—ã–π Linux
        try:
            with open('/proc/device-tree/model', 'r') as f:
                if 'raspberry pi' in f.read().lower():
                    print(
                        "üçì –†–µ–∂–∏–º Raspberry Pi: –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Ä–µ–∞–ª—å–Ω–æ–≥–æ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è")

                    # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ä–µ–∞–ª—å–Ω—ã–µ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏
                    import RPi.GPIO as GPIO
                    from adafruit_dht import DHT22
                    from serial import Serial
                    import busio
                    import adafruit_ads1x15.ads1115 as ADS1115
                    from adafruit_ads1x15.analog_in import AnalogIn
                    from mh_z19 import read_from_pwm

                    hardware_modules = {
                        'GPIO': GPIO,
                        'DHT22': DHT22,
                        'Serial': Serial,
                        'busio': busio,
                        'ADS1115': ADS1115,
                        'AnalogIn': AnalogIn,
                        'read_from_pwm': read_from_pwm,
                        'is_emulation': False
                    }
                else:
                    raise ImportError("–ù–µ Raspberry Pi")
        except:
            print("üêß –û–±—ã—á–Ω—ã–π Linux: —Ä–µ–∂–∏–º —ç–º—É–ª—è—Ü–∏–∏")
            from mock_hardware import (
                MockGPIO as GPIO,
                MockDHT22,
                MockSerial,
                MockI2C,
                MockADS1115,
                MockAnalogIn,
                mock_read_from_pwm
            )

            hardware_modules = {
                'GPIO': GPIO,
                'DHT22': MockDHT22,
                'Serial': MockSerial,
                'I2C': MockI2C,
                'ADS1115': MockADS1115,
                'AnalogIn': MockAnalogIn,
                'read_from_pwm': mock_read_from_pwm,
                'is_emulation': True
            }
    else:
        print("‚ùì –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –û–°: —Ä–µ–∂–∏–º —ç–º—É–ª—è—Ü–∏–∏")
        from mock_hardware import (
            MockGPIO as GPIO,
            MockDHT22,
            MockSerial,
            MockI2C,
            MockADS1115,
            MockAnalogIn,
            mock_read_from_pwm
        )

        hardware_modules = {
            'GPIO': GPIO,
            'DHT22': MockDHT22,
            'Serial': MockSerial,
            'I2C': MockI2C,
            'ADS1115': MockADS1115,
            'AnalogIn': MockAnalogIn,
            'read_from_pwm': mock_read_from_pwm,
            'is_emulation': True
        }

    return hardware_modules


# –ì–ª–æ–±–∞–ª—å–Ω–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è —Å –º–æ–¥—É–ª—è–º–∏ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è
hardware = setup_hardware()
